# Default values for podinfo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: safe2008/podinfo
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.2.1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "podinfo-no"

service:
  type: ClusterIP
  port: 8080

containerPort: 8080
## Readiness and liveness probe initial delay and timeout
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/

livenessProbe:
  enabled: false
  httpGet:
    path: "/health/liveness"
    port: 80
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3
  successThreshold: 1
  timeoutSeconds: 5

readinessProbe:
  enabled: false
  httpGet:
    path: "/health/readiness"
    port: 80
  initialDelaySeconds: 30
  periodSeconds: 5
  failureThreshold: 1
  successThreshold: 1
  timeoutSeconds: 5

podAnnotations:
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/agent-init-first: "true"
  vault.hashicorp.com/agent-pre-populate-only: "false"
  vault.hashicorp.com/template-static-secret-render-interval: "10s"
  vault.hashicorp.com/auth-path: "auth/devops-dev-cluster"
  vault.hashicorp.com/role: "vault-sidecar"
  vault.hashicorp.com/namespace: "Analytics/devops"
  vault.hashicorp.com/log-level: "debug"
  vault.hashicorp.com/agent-inject-secret-config: "secret/data/projects/tdg-analytics-poc/devops-dev-cluster/podinfo/env"
  vault.hashicorp.com/agent-inject-template-config: |
    {{ with secret "secret/data/projects/tdg-analytics-poc/devops-dev-cluster/podinfo/env" -}}
    {{ range $k, $v := .Data.data }}
    export {{ $k }}={{ $v }}
    {{ end }}
    {{- end }}
command:
  [
    "/bin/sh",
    "-c",
    ". /vault/secrets/config && exec ./podinfo;",
  ]
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-issuer"
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  hosts:
    - host: podinfo-no.teletubbies.info
      paths:
        - path: /
  tls:
  - secretName: podinfo-no.teletubbies.info-tls
    hosts:
    - podinfo-no.teletubbies.info

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

args: []

env: {}
  # NODE_ENV: production
  # PORT: 3000
  # PORT_LISTEN: 81

extraConfigmapMounts: {}
  # - name: cacerts
  #   configMap: cacerts-configmap
  #   mountPath: /etc/pki/ca-trust/extracted/java/cacerts
  #   subPath: ca-bundle.jks
  #   readOnly: true

extraSecretMounts: {}
  # - name: postgres
  #   secret: postgres
  #   mountPath: /app/postgres.conf
  #   subPath: postgres.conf
  #   readOnly: true
  # - name: application-secret
  #   secret: application
  #   mountPath: /app/application.conf
  #   subPath: application.conf
  #   readOnly: true

extraMounts: {}
  # - name: my-secrets
  #   mount:
  #     emptyDir:
  #       medium: Memory
  #   mountPath: /var/run/my-secrets

extEnv: {}
# - name: TYPE_ORM_POSTGRES_HOST
#   valueFrom:
#     secretKeyRef:
#       name: postgres
#       key: TYPE_ORM_POSTGRES_HOST